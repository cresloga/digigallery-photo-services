AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  getPhoto:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getPhotoV2
      Description: API to fetch Signed URL and Filename from S3 Bucket for a given file index
      Handler: index.handler
      Runtime: nodejs10.x
      Timeout: 60
      CodeUri: ./getphoto/
      Role: !GetAtt photoBucketAccessRoleV2.Arn
      Tracing: Active
      Layers:
        - arn:aws:lambda:us-east-1:891956057524:layer:s3-dependencies:2
      Environment:
        Variables:
          S3_BUCKET: '{{resolve:ssm:DIGIGALLERY_PHOTO_BUCKET:2}}'
          S3_REGION: '{{resolve:ssm:DIGIGALLERY_PHOTO_BUCKET_REGION:1}}'
      Events:
        photos:
          Type: Api
          Properties:
            Path: /photos
            RequestParameters:
              - method.request.querystring.picIndex:
                  Required: true
            Method: get
            RestApiId: !Ref galleryApi
    DependsOn:
    - photoBucketAccessRoleV2
  uploadPhoto:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: uploadPhotoV2
      Description: API to delete a file from S3 Bucket for a given file index
      Handler: index.handler
      Runtime: nodejs10.x
      Timeout: 60
      CodeUri: ./uploadphoto/
      Role: !GetAtt photoBucketAccessRoleV2.Arn
      Tracing: Active
      Layers:
        - arn:aws:lambda:us-east-1:891956057524:layer:s3-dependencies:2
      Environment:
        Variables:
          S3_BUCKET: '{{resolve:ssm:DIGIGALLERY_PHOTO_BUCKET:2}}'
          S3_REGION: '{{resolve:ssm:DIGIGALLERY_PHOTO_BUCKET_REGION:1}}'
      Events:
        photos:
          Type: Api
          Properties:
            Path: /photos
            Method: put
            RestApiId: !Ref galleryApi
    DependsOn:
    - photoBucketAccessRoleV2
  deletePhoto:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deletePhotoV2
      Description: API to delete a file from S3 Bucket for a given file index
      Handler: index.handler
      Runtime: nodejs10.x
      Timeout: 60
      CodeUri: ./deletephoto/
      Role: !GetAtt photoBucketAccessRoleV2.Arn
      Tracing: Active
      Layers:
        - arn:aws:lambda:us-east-1:891956057524:layer:s3-dependencies:2
      Environment:
        Variables:
          S3_BUCKET: '{{resolve:ssm:DIGIGALLERY_PHOTO_BUCKET:2}}'
          S3_REGION: '{{resolve:ssm:DIGIGALLERY_PHOTO_BUCKET_REGION:1}}'
      Events:
        photos:
          Type: Api
          Properties:
            Path: /photos
            RequestParameters:
              - method.request.querystring.fileName:
                  Required: true
            Method: delete
            RestApiId: !Ref galleryApi
    DependsOn:
    - photoBucketAccessRoleV2
  galleryApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: galleryV2
      StageName: prod
      TracingEnabled: true
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'POST, GET, PUT, DELETE'"
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: "galleryV2"
        basePath: "/prod"
        schemes:
        - "https"
        paths:
          /photos:
            get:
              parameters:
              - name: "picIndex"
                in: "query"
                required: true
                type: "string"
              responses: {}
            put:
              responses: {}
            delete:
              parameters:
              - name: "fileName"
                in: "query"
                required: true
                type: "string"
              responses: {}
  photoBucketAccessRoleV2:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Principal:
              Service:
              - 'lambda.amazonaws.com'
            Action: 
              - 'sts:AssumeRole'
      Policies:
      - PolicyName: digigallery-xray-lambda-policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Action:
            - "xray:PutTraceSegments"
            - "xray:PutTelemetryRecords"
            Effect: Allow
            Resource: "*"